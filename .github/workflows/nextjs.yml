name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5
        with:
          # Abilita export statico per Next (genera ./out)
          static_site_generator: next

      - name: Restore Next cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      # (opzionale) copia /public se servono asset extra non inclusi dall'export
      - name: Copy public assets to build output
        run: |
          if [ -d public ]; then cp -r public/* ./out/ || true; fi

      # Aggiungi CNAME e disabilita Jekyll
      - name: Add CNAME and .nojekyll
        run: |
          echo -n "giacomobianchi.tech" > ./out/CNAME
          touch ./out/.nojekyll

      # (opzionale) fallback SPA: scommenta se al refresh delle rotte vedi 404
      # - name: Add 404 fallback
      #   run: |
      #     cat > ./out/404.html <<'HTML'
      #     <!DOCTYPE html><html><head><meta charset="utf-8"/><script>
      #     (function(){var l=location;var p='/?p='+encodeURIComponent(l.pathname+l.search+l.hash);l.replace(p);})();
      #     </script></head><body></body></html>
      #     HTML
      #     echo "<script>(function(){var q=new URLSearchParams(location.search).get('p');if(q)history.replaceState({},'',q);})();</script>" >> ./out/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
